# Installer et charger le package 'httr' et 'jsonlite' si nécessaire
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("jsonlite", quietly = TRUE)) install.packages("jsonlite")
library(httr)
library(jsonlite)
# Fonction pour récupérer le dataset depuis l'API UCIML
fetch_ucirepo <- function(id) {
url <- paste0("https://archive.ics.uci.edu/ml/datasets/", id)
dataset <- read.csv(url, header = TRUE)
return(dataset)
}
# Télécharger les données Cardiotocography (ID: 193)
cardiotocography <- fetch_ucirepo("Cardiotocography")
# Diviser les données
X <- cardiotocography[, -ncol(cardiotocography)]  # Toutes les colonnes sauf la dernière (features)
y <- cardiotocography[, ncol(cardiotocography)]  # Dernière colonne (cible)
# Afficher les métadonnées
print("Le jeu de données contient les colonnes suivantes :")
print(names(cardiotocography))
# Afficher les informations des variables
print(str(cardiotocography))
# Installer les packages nécessaires (si ce n'est pas déjà fait)
if (!requireNamespace("UCI", quietly = TRUE)) {
install.packages("UCI")
}
# Charger le package
library(UCI)
install.packages("uci")
# Installer les packages nécessaires (si ce n'est pas déjà fait)
if (!requireNamespace("UCI", quietly = TRUE)) {
install.packages("UCI")
}
# Charger le package
library(UCI)
install.packages("UCI")
# Installer les packages nécessaires (si ce n'est pas déjà fait)
if (!requireNamespace("UCI", quietly = TRUE)) {
install.packages("UCI")
}
# Charger le package
library(UCI)
# Installer les packages nécessaires (si ce n'est pas déjà fait)
if (!requireNamespace("UCI", quietly = TRUE)) {
install.packages("UCI")
}
# Charger le package
library(uci)
# Charger le dataset Cardiotocography
cardiotocography <- uci::get_UCI_data("Cardiotocography")
# Installer les packages nécessaires (si ce n'est pas déjà fait)
if (!requireNamespace("UCI", quietly = TRUE)) {
install.packages("UCI")
}
# Charger le package
library(uci)
# Charger le dataset Cardiotocography
cardiotocography <- uci::get_uci_data("Cardiotocography")
# Charger les packages nécessaires
if (!requireNamespace("readr", quietly = TRUE)) install.packages("readr")
# Importer le dataset depuis l'URL
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/00193/CARDIOTOCOGRAPHY.csv"
dataset <- readr::read_csv(url, col_names = TRUE)
# Charger les packages nécessaires
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
# Télécharger et extraire le fichier ZIP
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip")
unzip("cardiotocography.zip", exdir = "cardiotocography")
# Charger les données Excel
library(readxl)
dataset <- read_excel("cardiotocography/CTG.xls")
# Résumé du jeu de données
summary(dataset)
# Charger les packages nécessaires
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
# Télécharger et extraire le fichier ZIP
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip")
unzip("cardiotocography.zip", exdir = "cardiotocography")
# Charger les données Excel
library(readxl)
dataset <- read_excel("cardiotocography/CTG.xls")
# Résumé du jeu de données
summary(dataset)
# Charger les packages nécessaires
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
# Télécharger et extraire le fichier ZIP
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip")
unzip("cardiotocography.zip", exdir = "cardiotocography")
# Charger les données Excel
library(readxl)
dataset <- read_excel("cardiotocography/CTG.xls")
# Résumé du jeu de données
summary(dataset)
clear <- function(){cat("\014")}
clear()
# Charger les packages nécessaires
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
# Télécharger et extraire le fichier ZIP
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip")
unzip("cardiotocography.zip", exdir = "cardiotocography")
# Charger les données Excel
library(readxl)
dataset <- read_excel("cardiotocography/CTG.xls")
# Résumé du jeu de données
summary(dataset)
# Charger les packages nécessaires
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
# Télécharger et extraire le fichier ZIP
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip")
unzip("cardiotocography.zip", exdir = "cardiotocography")
# Charger les données Excel
library(readxl)
dataset <- read_excel("cardiotocography/CTG.xls")
# Résumé du jeu de données
summary(dataset)
dataset.features
# Charger les packages nécessaires
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
# Télécharger et extraire le fichier ZIP
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip")
unzip("cardiotocography.zip", exdir = "cardiotocography")
# Charger les données Excel
library(readxl)
dataset <- read_excel("cardiotocography/CTG.xls")
# Résumé du jeu de données
summary(dataset)
datasets::WWWusage
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip")
unzip("cardiotocography.zip", exdir = "cardiotocography")
library(readxl)
dataset <- read_excel("cardiotocography/CTG.xls")
summary(dataset)
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip", quiet = TRUE)
unzip("cardiotocography.zip", exdir = "cardiotocography")
library(readxl)
dataset <- read_excel("cardiotocography/CTG.xls")
summary(dataset)
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip", quiet = TRUE)
unzip("cardiotocography.zip", exdir = "cardiotocography")
library(readxl)
# Lire le fichier Excel et le sauvegarder en CSV
xls_file <- "cardiotocography/CTG.xls"
csv_file <- "cardiotocography/CTG.csv"
data <- read_excel(xls_file)
write.csv(data, csv_file, row.names = FALSE)
# Charger les données CSV et afficher le résumé
data_csv <- read.csv(csv_file)
summary(data_csv)
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip", quiet = TRUE)
unzip("cardiotocography.zip", exdir = "cardiotocography")
library(readxl)
dataset <- read_excel("cardiotocography/CTG.xls")
summary(dataset)
types <- sapply(data_csv, class)
qualitatives <- names(types[types %in% c("factor", "character")])
quantitatives <- names(types[types %in% c("numeric", "integer")])
list(Qualitatives = qualitatives, Quantitatives = quantitatives)
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip", quiet = TRUE)
unzip("cardiotocography.zip", exdir = "cardiotocography")
library(readxl)
dataset <- read_excel("cardiotocography/CTG.xls", col_names = TRUE)
summary(dataset)
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip", quiet = TRUE)
unzip("cardiotocography.zip", exdir = "cardiotocography")
library(readxl)
dataset <- read_excel("cardiotocography/CTG.xls", col_names = TRUE)
summary(dataset)
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip", quiet = TRUE)
unzip("cardiotocography.zip", exdir = "cardiotocography")
library(readxl)
# Import en spécifiant où commencent les colonnes utiles
dataset <- read_excel("cardiotocography/CTG.xls", col_names = FALSE, skip = 1)
# Renommer les colonnes anonymes (si nécessaire)
colnames(dataset) <- paste0("Var", seq_len(ncol(dataset)))
summary(dataset)
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip", quiet = TRUE)
unzip("cardiotocography.zip", exdir = "cardiotocography")
library(readxl)
column_names <- c(
"LB", "AC", "FM", "UC", "DL", "DS", "DP", "ASTV", "MSTV", "ALTV", "MLTV",
"Width", "Min", "Max", "Nmax", "Nzeros", "Mode", "Mean", "Median",
"Variance", "Tendency", "CLASS", "NSP"
)
dataset <- read_excel("cardiotocography/CTG.xls", col_names = column_names)
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip", quiet = TRUE)
unzip("cardiotocography.zip", exdir = "cardiotocography")
library(readxl)
column_names <- c(
"LB", "AC", "FM", "UC", "DL", "DS", "DP", "ASTV", "MSTV", "ALTV", "MLTV",
"Width", "Min", "Max", "Nmax", "Nzeros", "Mode", "Mean", "Median",
"Variance", "Tendency", "CLASS", "NSP"
)
dataset <- read_excel("cardiotocography/CTG.xls", col_names = column_names)
if (!requireNamespace("readxl", quietly = TRUE)) install.packages("readxl")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("zip", quietly = TRUE)) install.packages("zip")
url <- "https://archive.ics.uci.edu/static/public/193/cardiotocography.zip"
download.file(url, destfile = "cardiotocography.zip", quiet = TRUE)
unzip("cardiotocography.zip", exdir = "cardiotocography")
library(readxl)
column_names <- c(
"LB", "AC", "FM", "UC", "DL", "DS", "DP", "ASTV", "MSTV", "ALTV", "MLTV",
"Width", "Min", "Max"
)
dataset <- read_excel("cardiotocography/CTG.xls", col_names = column_names)
summary(dataset)
install.packages("RCurl")
library(RCurl)
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/00193/CMT.csv"
data <- read.csv(text = getURL(url), header = TRUE)
X <- data[, -ncol(data)]  # Supposons que la dernière colonne est la cible
y <- data[, ncol(data)]
summary(data)
install.packages("RCurl")
library(RCurl)
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/00193/CMT.csv"
data <- read.csv(text = getURL(url), header = TRUE)
X <- data[, -ncol(data)]  # Supposons que la dernière colonne est la cible
y <- data[, ncol(data)]
summary(data)
install.packages("RCurl")
library(RCurl)
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/00193/CMT.csv"
data <- read.csv(text = getURL(url), header = TRUE)
X <- data[, -ncol(data)]  # Supposons que la dernière colonne est la cible
y <- data[, ncol(data)]
summary(data)
install.packages("ucimlrepo")
library(ucimlrepo)
cardiotocography <- fetch_ucirepo(id = 193)
library(ucimlrepo)
cardiotocography <- fetch_ucirepo(id = 193)
library(ucimlrepo)
cardiotocography <- fetch_ucirepo("cardiotocography ")
library(ucimlrepo)
cardiotocography <- fetch_ucirepo(id = 193)
library(ucimlrepo)
cardiotocography <-   fetch_ucirepo(name = "cardiotocography")
remotes::install_github("coatless-rpkg/ucimlrepo")
remotes::install_github("coatless-rpkg/ucimlrepo", quiet = TRUE)
remotes::install_github("coatless-rpkg/ucimlrepo", quiet = TRUE)
iris_by_name <- fetch_ucirepo(name = "iris")
remotes::install_github("coatless-rpkg/ucimlrepo")}
remotes::install_github("coatless-rpkg/ucimlrepo")
install.packages("remotes")
remotes::install_github("coatless-rpkg/ucimlrepo")
library(ucimlrepo)
library(ucimlrepo, quietly = TRUE)
library(ucimlrepo, quietly = TRUE)
library(ucimlrepo, quietly = TRUE)
iris_by_name <- fetch_ucirepo(name = "iris")
library(ucimlrepo, quietly = TRUE)
iris_by_name <- fetch_ucirepo(name = "iris")
library(ucimlrepo, quietly = TRUE)
iris_by_name <- fetch_ucirepo(name = "iris")
library(ucimlrepo, quietly = TRUE)
library(ucimlrepo, quietly = TRUE)
# Installer le package remotes si nécessaire
install.packages("remotes")
# Installer ucimlrepo depuis GitHub
remotes::install_github("coatless-rpkg/ucimlrepo")
# Charger la bibliothèque
library(ucimlrepo)
# Télécharger un jeu de données UCI, par exemple "iris"
iris_by_name <- fetch_ucirepo(name = "iris")
install.packages("remotes")
# Installer le package remotes si nécessaire
install.packages("remotes")
# Installer ucimlrepo depuis GitHub
remotes::install_github("coatless-rpkg/ucimlrepo")
# Charger la bibliothèque
library(ucimlrepo)
# Télécharger un jeu de données UCI, par exemple "iris"
iris_by_name <- fetch_ucirepo(name = "iris")
# Installer le package remotes si nécessaire
install.packages("remotes")
# Installer ucimlrepo depuis GitHub
remotes::install_github("coatless-rpkg/ucimlrepo")
# Charger la bibliothèque
library(ucimlrepo)
# Télécharger un jeu de données UCI, par exemple "iris"
iris_by_name <- fetch_ucirepo(name = "iris")
# Installer le package remotes si nécessaire
install.packages("remotes")
# Installer ucimlrepo depuis GitHub
remotes::install_github("coatless-rpkg/ucimlrepo")
# Charger la bibliothèque
library(ucimlrepo)
# Télécharger un jeu de données UCI, par exemple "iris"
iris_by_name <- fetch_ucirepo(name = "iris")
library(ucimlrepo)
names(iris_by_name)
library(ucimlrepo)
clear <- function(){cat("\cat")}
clear <- function(){cat("\014")}
clear()
library(ucimlrepo)
install.packages("devtools")
install("./ucimlrepo")
library(ucimlrepo)
library(devtools)
install("./ucimlrepo")
